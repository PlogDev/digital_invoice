version: '3.8'

services:
  # PostgreSQL Datenbank
  postgres:
    image: postgres:15
    container_name: ocr_postgres
    environment:
      POSTGRES_DB: ocr_docs
      POSTGRES_USER: ocr_user
      POSTGRES_PASSWORD: ocr_secure_2024
      POSTGRES_HOST_AUTH_METHOD: trust  # F端r Development einfacher
    ports:
      - "5432:5432"  # Localhost:5432 -> Container:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ocr_user -d ocr_docs"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Backend API
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: ocr_backend
    ports:
      - "8080:8080"  # Port 8080 statt 8000 (wegen Paperless NGX)
    environment:
      - DATABASE_URL=postgresql://ocr_user:ocr_secure_2024@postgres:5432/ocr_docs
      - PYTHONPATH=/app
      - PORT=8080
    volumes:
      - ./backend:/app
      - ./backend/pdfs:/app/pdfs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    # F端r Development: Backend-Service erstmal deaktiviert
    profiles:
      - production

  # Frontend (React/Vite)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ocr_frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api
    volumes:
      - ./frontend:/app
      - /app/node_modules  # Anonymous volume f端r node_modules
    depends_on:
      - backend
    restart: unless-stopped
    # F端r Development: Frontend-Service erstmal deaktiviert  
    profiles:
      - production

volumes:
  postgres_data: