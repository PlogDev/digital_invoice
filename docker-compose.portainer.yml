version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ocr_postgres
    environment:
      POSTGRES_DB: ocr_docs
      POSTGRES_USER: ocr_user
      POSTGRES_PASSWORD: ocr_secure_2024
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ocr_user -d ocr_docs"]
      interval: 15s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  backend:
    privileged: true 
    build:
      context: ./backend
      dockerfile: Dockerfile.portainer
    container_name: ocr_backend
    ports:
      - "8081:8081"
    environment:
      - DATABASE_URL=postgresql://ocr_user:ocr_secure_2024@postgres:5432/ocr_docs
      - PYTHONPATH=/app
      - PORT=8081
      - TESSERACT_CMD=/usr/bin/tesseract
      - PYTHONUNBUFFERED=1
    volumes:
      - backend_data:/app/pdfs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.portainer
    container_name: ocr_frontend
    ports:
      - "3000:80"  # Nginx auf Port 80, extern auf 3000
    environment:
      - VITE_API_BASE_URL=http://localhost:8081/api
    depends_on:
      - backend
    restart: unless-stopped


volumes:
  postgres_data:
  backend_data: